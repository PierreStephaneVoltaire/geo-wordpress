[0m[1mmodule.regional_infrastructure["ireland"].data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.regional_infrastructure["singapore"].data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.regional_infrastructure["ireland"].data.aws_availability_zones.available: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.regional_infrastructure["singapore"].data.aws_availability_zones.available: Read complete after 1s [id=ap-southeast-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # random_id.suffix[0m will be created
[0m  [32m+[0m[0m resource "random_id" "suffix" {
      [32m+[0m[0m b64_std     = (known after apply)
      [32m+[0m[0m b64_url     = (known after apply)
      [32m+[0m[0m byte_length = 2
      [32m+[0m[0m dec         = (known after apply)
      [32m+[0m[0m hex         = (known after apply)
      [32m+[0m[0m id          = (known after apply)
    }

[1m  # random_password.db_password[0m will be created
[0m  [32m+[0m[0m resource "random_password" "db_password" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 16
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # random_password.wp_admin_password[0m will be created
[0m  [32m+[0m[0m resource "random_password" "wp_admin_password" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 16
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.cloudfront.data.archive_file.geo_router_zip[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "archive_file" "geo_router_zip" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m output_base64sha256 = (known after apply)
      [32m+[0m[0m output_base64sha512 = (known after apply)
      [32m+[0m[0m output_md5          = (known after apply)
      [32m+[0m[0m output_path         = "modules/cloudfront/geo_router.zip"
      [32m+[0m[0m output_sha          = (known after apply)
      [32m+[0m[0m output_sha256       = (known after apply)
      [32m+[0m[0m output_sha512       = (known after apply)
      [32m+[0m[0m output_size         = (known after apply)
      [32m+[0m[0m type                = "zip"

      [32m+[0m[0m source {
          [32m+[0m[0m content  = <<-EOT
                # Python Lambda@Edge function for geo-routing
                import json
                
                # Geo-routing configuration
                REGIONS = {
                    'ireland': {
                        'region': 'eu-west-1',
                        'countries': ["IE","GB","FR","DE","NL","BE","ES","PT","IT","AT","CH","DK","SE","NO","FI"]
                    },
                    'singapore': {
                        'region': 'ap-southeast-1',
                        'countries': ["SG","MY","TH","ID","VN","PH","KH","LA","MM","BN"]
                    },
                }
                
                DEFAULT_REGION = 'ireland'
                
                def lambda_handler(event, context):
                    """
                    Lambda@Edge Origin Request function for geo-routing WordPress requests
                    """
                    request = event['Records'][0]['cf']['request']
                    headers = request['headers']
                    
                    # Get the CloudFront-Viewer-Country header
                    country = None
                    if 'cloudfront-viewer-country' in headers:
                        country = headers['cloudfront-viewer-country'][0]['value']
                    
                    print(f"Request from country: {country}")
                    
                    # Determine the target region based on country
                    target_region = DEFAULT_REGION
                    
                    if country:
                        for region_name, config in REGIONS.items():
                            if country in config['countries']:
                                target_region = region_name
                                break
                    
                    print(f"Routing to region: {target_region}")
                    
                    # Update the origin to the appropriate ALB
                    # Note: The actual ALB domain names will be updated by Terraform
                    request['origin'] = {
                        'custom': {
                            'domainName': f"alb-{target_region}.example.com",
                            'port': 80,
                            'protocol': 'http',
                            'path': ''
                        }
                    }
                    
                    # Add custom headers for debugging
                    request['headers']['x-routed-region'] = [
                        {'key': 'X-Routed-Region', 'value': target_region}
                    ]
                    request['headers']['x-viewer-country'] = [
                        {'key': 'X-Viewer-Country', 'value': country or 'unknown'}
                    ]
                    
                    return request
            EOT
          [32m+[0m[0m filename = "lambda_function.py"
        }
    }

[1m  # module.cloudfront.aws_cloudfront_cache_policy.wordpress_dynamic[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_cache_policy" "wordpress_dynamic" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m comment     = "Cache policy for WordPress dynamic content"
      [32m+[0m[0m default_ttl = 0
      [32m+[0m[0m etag        = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_ttl     = 31536000
      [32m+[0m[0m min_ttl     = 0
      [32m+[0m[0m name        = (known after apply)

      [32m+[0m[0m parameters_in_cache_key_and_forwarded_to_origin {
          [32m+[0m[0m enable_accept_encoding_brotli = true
          [32m+[0m[0m enable_accept_encoding_gzip   = true

          [32m+[0m[0m cookies_config {
              [32m+[0m[0m cookie_behavior = "all"
            }

          [32m+[0m[0m headers_config {
              [32m+[0m[0m header_behavior = "whitelist"

              [32m+[0m[0m headers {
                  [32m+[0m[0m items = [
                      [32m+[0m[0m "CloudFront-Viewer-Country",
                      [32m+[0m[0m "Host",
                    ]
                }
            }

          [32m+[0m[0m query_strings_config {
              [32m+[0m[0m query_string_behavior = "all"
            }
        }
    }

[1m  # module.cloudfront.aws_cloudfront_cache_policy.wordpress_static[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_cache_policy" "wordpress_static" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m comment     = "Cache policy for WordPress static assets"
      [32m+[0m[0m default_ttl = 86400
      [32m+[0m[0m etag        = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_ttl     = 31536000
      [32m+[0m[0m min_ttl     = 0
      [32m+[0m[0m name        = (known after apply)

      [32m+[0m[0m parameters_in_cache_key_and_forwarded_to_origin {
          [32m+[0m[0m enable_accept_encoding_brotli = true
          [32m+[0m[0m enable_accept_encoding_gzip   = true

          [32m+[0m[0m cookies_config {
              [32m+[0m[0m cookie_behavior = "none"
            }

          [32m+[0m[0m headers_config {
              [32m+[0m[0m header_behavior = "none"
            }

          [32m+[0m[0m query_strings_config {
              [32m+[0m[0m query_string_behavior = "none"
            }
        }
    }

[1m  # module.cloudfront.aws_cloudfront_distribution.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_distribution" "wordpress" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m caller_reference                = (known after apply)
      [32m+[0m[0m comment                         = "WordPress Global Distribution - wordpress-geo"
      [32m+[0m[0m continuous_deployment_policy_id = (known after apply)
      [32m+[0m[0m default_root_object             = "index.html"
      [32m+[0m[0m domain_name                     = (known after apply)
      [32m+[0m[0m enabled                         = true
      [32m+[0m[0m etag                            = (known after apply)
      [32m+[0m[0m hosted_zone_id                  = (known after apply)
      [32m+[0m[0m http_version                    = "http2"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m in_progress_validation_batches  = (known after apply)
      [32m+[0m[0m is_ipv6_enabled                 = true
      [32m+[0m[0m last_modified_time              = (known after apply)
      [32m+[0m[0m price_class                     = "PriceClass_All"
      [32m+[0m[0m retain_on_delete                = false
      [32m+[0m[0m staging                         = false
      [32m+[0m[0m status                          = (known after apply)
      [32m+[0m[0m tags                            = (known after apply)
      [32m+[0m[0m tags_all                        = (known after apply)
      [32m+[0m[0m trusted_key_groups              = (known after apply)
      [32m+[0m[0m trusted_signers                 = (known after apply)
      [32m+[0m[0m wait_for_deployment             = true

      [32m+[0m[0m default_cache_behavior {
          [32m+[0m[0m allowed_methods          = [
              [32m+[0m[0m "DELETE",
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
              [32m+[0m[0m "PATCH",
              [32m+[0m[0m "POST",
              [32m+[0m[0m "PUT",
            ]
          [32m+[0m[0m cache_policy_id          = (known after apply)
          [32m+[0m[0m cached_methods           = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress                 = true
          [32m+[0m[0m default_ttl              = (known after apply)
          [32m+[0m[0m max_ttl                  = (known after apply)
          [32m+[0m[0m min_ttl                  = 0
          [32m+[0m[0m origin_request_policy_id = (known after apply)
          [32m+[0m[0m target_origin_id         = "ALB-ireland"
          [32m+[0m[0m trusted_key_groups       = (known after apply)
          [32m+[0m[0m trusted_signers          = (known after apply)
          [32m+[0m[0m viewer_protocol_policy   = "redirect-to-https"

          [32m+[0m[0m grpc_config (known after apply)

          [32m+[0m[0m lambda_function_association {
              [32m+[0m[0m event_type   = "origin-request"
              [32m+[0m[0m include_body = false
              [32m+[0m[0m lambda_arn   = (known after apply)
            }
        }

      [32m+[0m[0m ordered_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
            ]
          [32m+[0m[0m cache_policy_id        = (known after apply)
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress               = true
          [32m+[0m[0m default_ttl            = (known after apply)
          [32m+[0m[0m max_ttl                = (known after apply)
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m path_pattern           = "/wp-content/uploads/*"
          [32m+[0m[0m target_origin_id       = "S3-wordpress-geo-media"
          [32m+[0m[0m viewer_protocol_policy = "redirect-to-https"

          [32m+[0m[0m grpc_config (known after apply)
        }
      [32m+[0m[0m ordered_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
            ]
          [32m+[0m[0m cache_policy_id        = (known after apply)
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress               = true
          [32m+[0m[0m default_ttl            = (known after apply)
          [32m+[0m[0m max_ttl                = (known after apply)
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m path_pattern           = "/wp-content/*"
          [32m+[0m[0m target_origin_id       = "ALB-ireland"
          [32m+[0m[0m viewer_protocol_policy = "redirect-to-https"

          [32m+[0m[0m grpc_config (known after apply)

          [32m+[0m[0m lambda_function_association {
              [32m+[0m[0m event_type   = "origin-request"
              [32m+[0m[0m include_body = false
              [32m+[0m[0m lambda_arn   = (known after apply)
            }
        }

      [32m+[0m[0m origin {
          [32m+[0m[0m connection_attempts      = 3
          [32m+[0m[0m connection_timeout       = 10
          [32m+[0m[0m domain_name              = (known after apply)
          [32m+[0m[0m origin_id                = "ALB-ireland"
            [90m# (2 unchanged attributes hidden)[0m[0m

          [32m+[0m[0m custom_origin_config {
              [32m+[0m[0m http_port                = 80
              [32m+[0m[0m https_port               = 443
              [32m+[0m[0m origin_keepalive_timeout = 5
              [32m+[0m[0m origin_protocol_policy   = "http-only"
              [32m+[0m[0m origin_read_timeout      = 30
              [32m+[0m[0m origin_ssl_protocols     = [
                  [32m+[0m[0m "TLSv1.2",
                ]
            }
        }
      [32m+[0m[0m origin {
          [32m+[0m[0m connection_attempts      = 3
          [32m+[0m[0m connection_timeout       = 10
          [32m+[0m[0m domain_name              = (known after apply)
          [32m+[0m[0m origin_id                = "ALB-singapore"
            [90m# (2 unchanged attributes hidden)[0m[0m

          [32m+[0m[0m custom_origin_config {
              [32m+[0m[0m http_port                = 80
              [32m+[0m[0m https_port               = 443
              [32m+[0m[0m origin_keepalive_timeout = 5
              [32m+[0m[0m origin_protocol_policy   = "http-only"
              [32m+[0m[0m origin_read_timeout      = 30
              [32m+[0m[0m origin_ssl_protocols     = [
                  [32m+[0m[0m "TLSv1.2",
                ]
            }
        }
      [32m+[0m[0m origin {
          [32m+[0m[0m connection_attempts      = 3
          [32m+[0m[0m connection_timeout       = 10
          [32m+[0m[0m domain_name              = (known after apply)
          [32m+[0m[0m origin_access_control_id = (known after apply)
          [32m+[0m[0m origin_id                = "S3-wordpress-geo-media"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m restrictions {
          [32m+[0m[0m geo_restriction {
              [32m+[0m[0m locations        = (known after apply)
              [32m+[0m[0m restriction_type = "none"
            }
        }

      [32m+[0m[0m viewer_certificate {
          [32m+[0m[0m cloudfront_default_certificate = true
          [32m+[0m[0m minimum_protocol_version       = "TLSv1.2_2021"
        }
    }

[1m  # module.cloudfront.aws_cloudfront_origin_access_control.s3_oac[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_origin_access_control" "s3_oac" {
      [32m+[0m[0m arn                               = (known after apply)
      [32m+[0m[0m description                       = "OAC for S3 bucket access"
      [32m+[0m[0m etag                              = (known after apply)
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m name                              = (known after apply)
      [32m+[0m[0m origin_access_control_origin_type = "s3"
      [32m+[0m[0m signing_behavior                  = "always"
      [32m+[0m[0m signing_protocol                  = "sigv4"
    }

[1m  # module.cloudfront.aws_cloudfront_origin_request_policy.wordpress_dynamic[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_origin_request_policy" "wordpress_dynamic" {
      [32m+[0m[0m arn     = (known after apply)
      [32m+[0m[0m comment = "Origin request policy for WordPress dynamic content"
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = (known after apply)

      [32m+[0m[0m cookies_config {
          [32m+[0m[0m cookie_behavior = "all"
        }

      [32m+[0m[0m headers_config {
          [32m+[0m[0m header_behavior = "allViewer"
        }

      [32m+[0m[0m query_strings_config {
          [32m+[0m[0m query_string_behavior = "all"
        }
    }

[1m  # module.cloudfront.aws_iam_role.lambda_edge[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "lambda_edge" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = [
                              [32m+[0m[0m "lambda.amazonaws.com",
                              [32m+[0m[0m "edgelambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.cloudfront.aws_iam_role_policy_attachment.lambda_edge[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_edge" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.cloudfront.aws_lambda_function.geo_router[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "geo_router" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "modules/cloudfront/geo_router.zip"
      [32m+[0m[0m function_name                  = (known after apply)
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = true
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m region                         = "us-east-1"
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.12"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = (known after apply)
      [32m+[0m[0m tags_all                       = (known after apply)
      [32m+[0m[0m timeout                        = 5
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m ephemeral_storage (known after apply)

      [32m+[0m[0m logging_config (known after apply)

      [32m+[0m[0m tracing_config (known after apply)
    }

[1m  # module.global_database.aws_iam_role.rds_enhanced_monitoring[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "rds_enhanced_monitoring" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "monitoring.rds.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.global_database.aws_iam_role_policy_attachment.rds_enhanced_monitoring[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "rds_enhanced_monitoring" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.global_database.aws_rds_cluster.primary[0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster" "primary" {
      [32m+[0m[0m allocated_storage                     = (known after apply)
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m availability_zones                    = (known after apply)
      [32m+[0m[0m backup_retention_period               = 7
      [32m+[0m[0m ca_certificate_identifier             = (known after apply)
      [32m+[0m[0m ca_certificate_valid_till             = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier_prefix             = (known after apply)
      [32m+[0m[0m cluster_members                       = (known after apply)
      [32m+[0m[0m cluster_resource_id                   = (known after apply)
      [32m+[0m[0m cluster_scalability_type              = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m database_insights_mode                = (known after apply)
      [32m+[0m[0m database_name                         = "wordpress"
      [32m+[0m[0m db_cluster_parameter_group_name       = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m db_system_id                          = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m enable_global_write_forwarding        = false
      [32m+[0m[0m enable_http_endpoint                  = false
      [32m+[0m[0m enable_local_write_forwarding         = false
      [32m+[0m[0m enabled_cloudwatch_logs_exports       = [
          [32m+[0m[0m "error",
          [32m+[0m[0m "general",
          [32m+[0m[0m "slowquery",
        ]
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_mode                           = "provisioned"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.02.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m global_cluster_identifier             = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m iam_roles                             = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m master_password                       = (sensitive value)
      [32m+[0m[0m master_password_wo                    = (write-only attribute)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m master_username                       = "wpuser"
      [32m+[0m[0m monitoring_interval                   = (known after apply)
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = "03:00-04:00"
      [32m+[0m[0m preferred_maintenance_window          = "sun:04:00-sun:05:00"
      [32m+[0m[0m reader_endpoint                       = (known after apply)
      [32m+[0m[0m region                                = "ap-southeast-1"
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m storage_encrypted                     = true
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = (known after apply)
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.global_database.aws_rds_cluster.secondary["ireland"][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster" "secondary" {
      [32m+[0m[0m allocated_storage                     = (known after apply)
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m availability_zones                    = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m ca_certificate_identifier             = (known after apply)
      [32m+[0m[0m ca_certificate_valid_till             = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier_prefix             = (known after apply)
      [32m+[0m[0m cluster_members                       = (known after apply)
      [32m+[0m[0m cluster_resource_id                   = (known after apply)
      [32m+[0m[0m cluster_scalability_type              = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m database_insights_mode                = (known after apply)
      [32m+[0m[0m database_name                         = (known after apply)
      [32m+[0m[0m db_cluster_parameter_group_name       = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m db_system_id                          = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m enable_global_write_forwarding        = false
      [32m+[0m[0m enable_http_endpoint                  = false
      [32m+[0m[0m enable_local_write_forwarding         = false
      [32m+[0m[0m enabled_cloudwatch_logs_exports       = [
          [32m+[0m[0m "error",
          [32m+[0m[0m "general",
          [32m+[0m[0m "slowquery",
        ]
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_mode                           = "provisioned"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.02.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m global_cluster_identifier             = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m iam_roles                             = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m master_password_wo                    = (write-only attribute)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m master_username                       = (known after apply)
      [32m+[0m[0m monitoring_interval                   = (known after apply)
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m reader_endpoint                       = (known after apply)
      [32m+[0m[0m region                                = "eu-west-1"
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m storage_encrypted                     = true
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = (known after apply)
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.global_database.aws_rds_cluster_instance.primary[0][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster_instance" "primary" {
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_parameter_group_name               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m dbi_resource_id                       = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.02.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m force_destroy                         = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = (known after apply)
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t4g.medium"
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 60
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = true
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m promotion_tier                        = 0
      [32m+[0m[0m publicly_accessible                   = (known after apply)
      [32m+[0m[0m region                                = "ap-southeast-1"
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m tags                                  = (known after apply)
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m writer                                = (known after apply)
    }

[1m  # module.global_database.aws_rds_cluster_instance.secondary["ireland"][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster_instance" "secondary" {
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_parameter_group_name               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m dbi_resource_id                       = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.02.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m force_destroy                         = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = (known after apply)
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t4g.medium"
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 60
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = true
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m promotion_tier                        = 0
      [32m+[0m[0m publicly_accessible                   = (known after apply)
      [32m+[0m[0m region                                = "eu-west-1"
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m tags                                  = (known after apply)
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m writer                                = (known after apply)
    }

[1m  # module.global_database.aws_rds_global_cluster.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_rds_global_cluster" "wordpress" {
      [32m+[0m[0m arn                          = (known after apply)
      [32m+[0m[0m database_name                = "wordpress"
      [32m+[0m[0m deletion_protection          = false
      [32m+[0m[0m endpoint                     = (known after apply)
      [32m+[0m[0m engine                       = "aurora-mysql"
      [32m+[0m[0m engine_lifecycle_support     = (known after apply)
      [32m+[0m[0m engine_version               = "8.0.mysql_aurora.3.02.0"
      [32m+[0m[0m engine_version_actual        = (known after apply)
      [32m+[0m[0m global_cluster_identifier    = (known after apply)
      [32m+[0m[0m global_cluster_members       = (known after apply)
      [32m+[0m[0m global_cluster_resource_id   = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m region                       = "us-east-1"
      [32m+[0m[0m source_db_cluster_identifier = (known after apply)
      [32m+[0m[0m storage_encrypted            = true
      [32m+[0m[0m tags                         = (known after apply)
      [32m+[0m[0m tags_all                     = (known after apply)
    }

[1m  # module.global_storage.aws_iam_role.s3_replication[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "s3_replication" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "s3.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.global_storage.aws_iam_role_policy.s3_replication[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "s3_replication" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = (known after apply)
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.global_storage.aws_s3_bucket.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "wordpress_media" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = (known after apply)
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_region               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = "us-east-1"
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.global_storage.aws_s3_bucket.wordpress_media_replica["eu-west-1"][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "wordpress_media_replica" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = (known after apply)
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_region               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = "us-east-1"
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.global_storage.aws_s3_bucket_cors_configuration.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_cors_configuration" "wordpress_media" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m cors_rule {
          [32m+[0m[0m allowed_headers = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m allowed_methods = [
              [32m+[0m[0m "DELETE",
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "POST",
              [32m+[0m[0m "PUT",
            ]
          [32m+[0m[0m allowed_origins = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m expose_headers  = [
              [32m+[0m[0m "ETag",
            ]
            id              = [90mnull[0m[0m
          [32m+[0m[0m max_age_seconds = 3000
        }
    }

[1m  # module.global_storage.aws_s3_bucket_policy.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "wordpress_media" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
      [32m+[0m[0m region = "us-east-1"
    }

[1m  # module.global_storage.aws_s3_bucket_public_access_block.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "wordpress_media" {
      [32m+[0m[0m block_public_acls       = false
      [32m+[0m[0m block_public_policy     = false
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = false
      [32m+[0m[0m region                  = "us-east-1"
      [32m+[0m[0m restrict_public_buckets = false
    }

[1m  # module.global_storage.aws_s3_bucket_replication_configuration.wordpress_media[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_replication_configuration" "wordpress_media" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"
      [32m+[0m[0m role   = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "ReplicateToEu-West-1"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m destination {
              [32m+[0m[0m bucket        = (known after apply)
              [32m+[0m[0m storage_class = "STANDARD_IA"
            }
        }
    }

[1m  # module.global_storage.aws_s3_bucket_server_side_encryption_configuration.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "wordpress_media" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m rule {
          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m sse_algorithm     = "AES256"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.global_storage.aws_s3_bucket_server_side_encryption_configuration.wordpress_media_replica["eu-west-1"][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "wordpress_media_replica" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m rule {
          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m sse_algorithm     = "AES256"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.global_storage.aws_s3_bucket_versioning.wordpress_media[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "wordpress_media" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.global_storage.aws_s3_bucket_versioning.wordpress_media_replica["eu-west-1"][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "wordpress_media_replica" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.parameter_store.aws_ssm_parameter.cloudfront_domain[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "cloudfront_domain" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/cloudfront/distribution_domain_name"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.db_endpoint_primary[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "db_endpoint_primary" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/database/endpoint/primary"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.db_endpoint_secondary["ireland"][0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "db_endpoint_secondary" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/database/endpoint/ireland"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.db_password[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "db_password" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/database/password"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.db_username[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "db_username" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/database/username"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.s3_bucket_name[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "s3_bucket_name" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/s3/bucket_name"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_admin_email[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_admin_email" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/admin_email"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "String"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_admin_password[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_admin_password" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/admin_password"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_auth_key[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_auth_key" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/auth_key"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_auth_salt[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_auth_salt" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/auth_salt"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_logged_in_key[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_logged_in_key" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/logged_in_key"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_logged_in_salt[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_logged_in_salt" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/logged_in_salt"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_nonce_key[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_nonce_key" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/nonce_key"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_nonce_salt[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_nonce_salt" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/nonce_salt"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_secure_auth_key[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_secure_auth_key" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/secure_auth_key"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.aws_ssm_parameter.wp_secure_auth_salt[0m will be created
[0m  [32m+[0m[0m resource "aws_ssm_parameter" "wp_secure_auth_salt" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m data_type      = (known after apply)
      [32m+[0m[0m has_value_wo   = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m insecure_value = (known after apply)
      [32m+[0m[0m key_id         = (known after apply)
      [32m+[0m[0m name           = "/wordpress-geo/prod/wordpress/secure_auth_salt"
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m tags           = (known after apply)
      [32m+[0m[0m tags_all       = (known after apply)
      [32m+[0m[0m tier           = (known after apply)
      [32m+[0m[0m type           = "SecureString"
      [32m+[0m[0m value          = (sensitive value)
      [32m+[0m[0m value_wo       = (write-only attribute)
      [32m+[0m[0m version        = (known after apply)
    }

[1m  # module.parameter_store.random_password.auth_key[0m will be created
[0m  [32m+[0m[0m resource "random_password" "auth_key" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.auth_salt[0m will be created
[0m  [32m+[0m[0m resource "random_password" "auth_salt" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.logged_in_key[0m will be created
[0m  [32m+[0m[0m resource "random_password" "logged_in_key" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.logged_in_salt[0m will be created
[0m  [32m+[0m[0m resource "random_password" "logged_in_salt" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.nonce_key[0m will be created
[0m  [32m+[0m[0m resource "random_password" "nonce_key" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.nonce_salt[0m will be created
[0m  [32m+[0m[0m resource "random_password" "nonce_salt" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.secure_auth_key[0m will be created
[0m  [32m+[0m[0m resource "random_password" "secure_auth_key" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.parameter_store.random_password.secure_auth_salt[0m will be created
[0m  [32m+[0m[0m resource "random_password" "secure_auth_salt" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 64
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # module.regional_infrastructure["ireland"].aws_db_subnet_group.main[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "main" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m region                  = "eu-west-1"
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = (known after apply)
      [32m+[0m[0m tags_all                = (known after apply)
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_eip.nat[1][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_eip.nat[2][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_elasticache_subnet_group.main[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "main" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m region      = "eu-west-1"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m vpc_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_internet_gateway.main[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "main" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m region   = "eu-west-1"
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_nat_gateway.main[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_nat_gateway.main[1][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_nat_gateway.main[2][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table.database[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "database" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-1"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m gateway_id                 = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_route_table_association.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_security_group.alb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = "HTTP"
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = "HTTPS"
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-alb-ireland-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_security_group.ecs[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "ecs" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "HTTP from ALB"
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-ecs-ireland-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_security_group.rds[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "rds" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "MySQL/Aurora from ECS"
              [32m+[0m[0m from_port        = 3306
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3306
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-rds-ireland-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_security_group.redis[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "redis" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Redis from ECS"
              [32m+[0m[0m from_port        = 6379
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 6379
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-redis-ireland-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.20.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.21.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.22.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.10.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.11.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.12.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.0.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_subnet.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["ireland"].aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.1.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m region                               = "eu-west-1"
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_db_subnet_group.main[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "main" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m region                  = "ap-southeast-1"
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = (known after apply)
      [32m+[0m[0m tags_all                = (known after apply)
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "ap-southeast-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_eip.nat[1][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "ap-southeast-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_eip.nat[2][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "ap-southeast-1"
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_elasticache_subnet_group.main[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "main" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m region      = "ap-southeast-1"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m vpc_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_internet_gateway.main[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "main" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m region   = "ap-southeast-1"
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_nat_gateway.main[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "ap-southeast-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_nat_gateway.main[1][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "ap-southeast-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_nat_gateway.main[2][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "ap-southeast-1"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table.database[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "database" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m gateway_id                 = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_route_table_association.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_security_group.alb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = "HTTP"
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = "HTTPS"
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-alb-singapore-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "ap-southeast-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_security_group.ecs[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "ecs" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "HTTP from ALB"
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-ecs-singapore-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "ap-southeast-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_security_group.rds[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "rds" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "MySQL/Aurora from ECS"
              [32m+[0m[0m from_port        = 3306
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3306
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-rds-singapore-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "ap-southeast-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_security_group.redis[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "redis" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Redis from ECS"
              [32m+[0m[0m from_port        = 6379
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 6379
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "wordpress-geo-redis-singapore-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "ap-southeast-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.20.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.21.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.22.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.10.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.11.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.12.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.0.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_subnet.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "ap-southeast-1"
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.regional_infrastructure["singapore"].aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m region                               = "ap-southeast-1"
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_appautoscaling_policy.wordpress_memory[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "wordpress_memory" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = (known after apply)
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in = false
          [32m+[0m[0m target_value     = 80

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageMemoryUtilization"
            }
        }
    }

[1m  # module.wordpress_fargate["ireland"].aws_appautoscaling_policy.wordpress_up[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "wordpress_up" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = (known after apply)
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in = false
          [32m+[0m[0m target_value     = 70

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageCPUUtilization"
            }
        }
    }

[1m  # module.wordpress_fargate["ireland"].aws_appautoscaling_target.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_target" "wordpress" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m max_capacity       = 3
      [32m+[0m[0m min_capacity       = 1
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m role_arn           = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"
      [32m+[0m[0m tags_all           = {
          [32m+[0m[0m "Environment" = "prod"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "wordpress-geo"
        }

      [32m+[0m[0m suspended_state (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_cloudwatch_log_group.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "wordpress" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = (known after apply)
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m region            = "us-east-1"
      [32m+[0m[0m retention_in_days = 7
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_ecs_cluster.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster" "wordpress" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = (known after apply)
      [32m+[0m[0m region   = "us-east-1"
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)

      [32m+[0m[0m setting {
          [32m+[0m[0m name  = "containerInsights"
          [32m+[0m[0m value = "enabled"
        }
    }

[1m  # module.wordpress_fargate["ireland"].aws_ecs_service.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "wordpress" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m availability_zone_rebalancing      = "DISABLED"
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 1
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m platform_version                   = "LATEST"
      [32m+[0m[0m region                             = "us-east-1"
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "wordpress"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = false
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = (known after apply)
        }

      [32m+[0m[0m service_registries {
          [32m+[0m[0m registry_arn = (known after apply)
        }
    }

[1m  # module.wordpress_fargate["ireland"].aws_ecs_task_definition.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "wordpress" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = (known after apply)
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags                     = (known after apply)
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m track_latest             = false
    }

[1m  # module.wordpress_fargate["ireland"].aws_elasticache_replication_group.redis[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_replication_group" "redis" {
      [32m+[0m[0m apply_immediately              = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m at_rest_encryption_enabled     = "true"
      [32m+[0m[0m auto_minor_version_upgrade     = (known after apply)
      [32m+[0m[0m automatic_failover_enabled     = false
      [32m+[0m[0m cluster_enabled                = (known after apply)
      [32m+[0m[0m cluster_mode                   = (known after apply)
      [32m+[0m[0m configuration_endpoint_address = (known after apply)
      [32m+[0m[0m data_tiering_enabled           = (known after apply)
      [32m+[0m[0m description                    = "Redis cluster for WordPress caching"
      [32m+[0m[0m engine                         = "redis"
      [32m+[0m[0m engine_version                 = (known after apply)
      [32m+[0m[0m engine_version_actual          = (known after apply)
      [32m+[0m[0m global_replication_group_id    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m ip_discovery                   = (known after apply)
      [32m+[0m[0m maintenance_window             = (known after apply)
      [32m+[0m[0m member_clusters                = (known after apply)
      [32m+[0m[0m multi_az_enabled               = false
      [32m+[0m[0m network_type                   = (known after apply)
      [32m+[0m[0m node_type                      = "cache.t4g.nano"
      [32m+[0m[0m num_cache_clusters             = 1
      [32m+[0m[0m num_node_groups                = (known after apply)
      [32m+[0m[0m parameter_group_name           = "default.redis7"
      [32m+[0m[0m port                           = 6379
      [32m+[0m[0m primary_endpoint_address       = (known after apply)
      [32m+[0m[0m reader_endpoint_address        = (known after apply)
      [32m+[0m[0m region                         = "us-east-1"
      [32m+[0m[0m replicas_per_node_group        = (known after apply)
      [32m+[0m[0m replication_group_id           = (known after apply)
      [32m+[0m[0m security_group_ids             = (known after apply)
      [32m+[0m[0m security_group_names           = (known after apply)
      [32m+[0m[0m snapshot_window                = (known after apply)
      [32m+[0m[0m subnet_group_name              = (known after apply)
      [32m+[0m[0m tags                           = (known after apply)
      [32m+[0m[0m tags_all                       = (known after apply)
      [32m+[0m[0m transit_encryption_enabled     = true
      [32m+[0m[0m transit_encryption_mode        = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_iam_role.ecs_execution[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_execution" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_iam_role.ecs_task[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_task" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_iam_role_policy.ecs_task_parameter_store[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "ecs_task_parameter_store" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ssm:GetParameter",
                          [32m+[0m[0m "ssm:GetParameters",
                          [32m+[0m[0m "ssm:GetParametersByPath",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = [
                          [32m+[0m[0m "arn:aws:ssm:eu-west-1:*:parameter/wordpress-geo/prod/*",
                        ]
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_iam_role_policy.ecs_task_s3[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "ecs_task_s3" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = (known after apply)
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_iam_role_policy_attachment.ecs_execution_role_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_execution_role_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_lb.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "wordpress" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enable_zonal_shift                                           = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = (known after apply)
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m region                                                       = "us-east-1"
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = (known after apply)
      [32m+[0m[0m tags_all                                                     = (known after apply)
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m subnet_mapping (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_lb_listener.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "wordpress" {
      [32m+[0m[0m arn                                                                   = (known after apply)
      [32m+[0m[0m id                                                                    = (known after apply)
      [32m+[0m[0m load_balancer_arn                                                     = (known after apply)
      [32m+[0m[0m port                                                                  = 80
      [32m+[0m[0m protocol                                                              = "HTTP"
      [32m+[0m[0m region                                                                = "us-east-1"
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_header_name               = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_issuer_header_name        = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_leaf_header_name          = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_subject_header_name       = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_validity_header_name      = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_cipher_suite_header_name              = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_version_header_name                   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_credentials_header_value   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_headers_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_methods_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_origin_header_value        = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_expose_headers_header_value      = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_max_age_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_content_security_policy_header_value            = (known after apply)
      [32m+[0m[0m routing_http_response_server_enabled                                  = (known after apply)
      [32m+[0m[0m routing_http_response_strict_transport_security_header_value          = (known after apply)
      [32m+[0m[0m routing_http_response_x_content_type_options_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_x_frame_options_header_value                    = (known after apply)
      [32m+[0m[0m ssl_policy                                                            = (known after apply)
      [32m+[0m[0m tags_all                                                              = {
          [32m+[0m[0m "Environment" = "prod"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "wordpress-geo"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds                                              = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }

      [32m+[0m[0m mutual_authentication (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_lb_target_group.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "wordpress" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m region                             = "us-east-1"
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "ip"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200,302"
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 10
          [32m+[0m[0m unhealthy_threshold = 5
        }

      [32m+[0m[0m stickiness (known after apply)

      [32m+[0m[0m target_failover (known after apply)

      [32m+[0m[0m target_group_health (known after apply)

      [32m+[0m[0m target_health_state (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_service_discovery_private_dns_namespace.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_service_discovery_private_dns_namespace" "wordpress" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m hosted_zone = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "wordpress-geo.local"
      [32m+[0m[0m region      = "us-east-1"
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m vpc         = (known after apply)
    }

[1m  # module.wordpress_fargate["ireland"].aws_service_discovery_service.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_service_discovery_service" "wordpress" {
      [32m+[0m[0m arn           = (known after apply)
      [32m+[0m[0m force_destroy = false
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m name          = "wordpress-ireland"
      [32m+[0m[0m namespace_id  = (known after apply)
      [32m+[0m[0m region        = "us-east-1"
      [32m+[0m[0m tags          = (known after apply)
      [32m+[0m[0m tags_all      = (known after apply)
      [32m+[0m[0m type          = (known after apply)

      [32m+[0m[0m dns_config {
          [32m+[0m[0m namespace_id   = (known after apply)
          [32m+[0m[0m routing_policy = "MULTIVALUE"

          [32m+[0m[0m dns_records {
              [32m+[0m[0m ttl  = 10
              [32m+[0m[0m type = "A"
            }
        }
    }

[1m  # module.wordpress_fargate["singapore"].aws_appautoscaling_policy.wordpress_memory[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "wordpress_memory" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = (known after apply)
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in = false
          [32m+[0m[0m target_value     = 80

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageMemoryUtilization"
            }
        }
    }

[1m  # module.wordpress_fargate["singapore"].aws_appautoscaling_policy.wordpress_up[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_policy" "wordpress_up" {
      [32m+[0m[0m alarm_arns         = (known after apply)
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = (known after apply)
      [32m+[0m[0m policy_type        = "TargetTrackingScaling"
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"

      [32m+[0m[0m target_tracking_scaling_policy_configuration {
          [32m+[0m[0m disable_scale_in = false
          [32m+[0m[0m target_value     = 70

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ECSServiceAverageCPUUtilization"
            }
        }
    }

[1m  # module.wordpress_fargate["singapore"].aws_appautoscaling_target.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_appautoscaling_target" "wordpress" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m max_capacity       = 3
      [32m+[0m[0m min_capacity       = 1
      [32m+[0m[0m region             = "us-east-1"
      [32m+[0m[0m resource_id        = (known after apply)
      [32m+[0m[0m role_arn           = (known after apply)
      [32m+[0m[0m scalable_dimension = "ecs:service:DesiredCount"
      [32m+[0m[0m service_namespace  = "ecs"
      [32m+[0m[0m tags_all           = {
          [32m+[0m[0m "Environment" = "prod"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "wordpress-geo"
        }

      [32m+[0m[0m suspended_state (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_cloudwatch_log_group.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "wordpress" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = (known after apply)
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m region            = "us-east-1"
      [32m+[0m[0m retention_in_days = 7
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_ecs_cluster.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster" "wordpress" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = (known after apply)
      [32m+[0m[0m region   = "us-east-1"
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)

      [32m+[0m[0m setting {
          [32m+[0m[0m name  = "containerInsights"
          [32m+[0m[0m value = "enabled"
        }
    }

[1m  # module.wordpress_fargate["singapore"].aws_ecs_service.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "wordpress" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m availability_zone_rebalancing      = "DISABLED"
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 1
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m platform_version                   = "LATEST"
      [32m+[0m[0m region                             = "us-east-1"
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "wordpress"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = false
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = (known after apply)
        }

      [32m+[0m[0m service_registries {
          [32m+[0m[0m registry_arn = (known after apply)
        }
    }

[1m  # module.wordpress_fargate["singapore"].aws_ecs_task_definition.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "wordpress" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = (known after apply)
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags                     = (known after apply)
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
      [32m+[0m[0m track_latest             = false
    }

[1m  # module.wordpress_fargate["singapore"].aws_elasticache_replication_group.redis[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_replication_group" "redis" {
      [32m+[0m[0m apply_immediately              = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m at_rest_encryption_enabled     = "true"
      [32m+[0m[0m auto_minor_version_upgrade     = (known after apply)
      [32m+[0m[0m automatic_failover_enabled     = false
      [32m+[0m[0m cluster_enabled                = (known after apply)
      [32m+[0m[0m cluster_mode                   = (known after apply)
      [32m+[0m[0m configuration_endpoint_address = (known after apply)
      [32m+[0m[0m data_tiering_enabled           = (known after apply)
      [32m+[0m[0m description                    = "Redis cluster for WordPress caching"
      [32m+[0m[0m engine                         = "redis"
      [32m+[0m[0m engine_version                 = (known after apply)
      [32m+[0m[0m engine_version_actual          = (known after apply)
      [32m+[0m[0m global_replication_group_id    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m ip_discovery                   = (known after apply)
      [32m+[0m[0m maintenance_window             = (known after apply)
      [32m+[0m[0m member_clusters                = (known after apply)
      [32m+[0m[0m multi_az_enabled               = false
      [32m+[0m[0m network_type                   = (known after apply)
      [32m+[0m[0m node_type                      = "cache.t4g.nano"
      [32m+[0m[0m num_cache_clusters             = 1
      [32m+[0m[0m num_node_groups                = (known after apply)
      [32m+[0m[0m parameter_group_name           = "default.redis7"
      [32m+[0m[0m port                           = 6379
      [32m+[0m[0m primary_endpoint_address       = (known after apply)
      [32m+[0m[0m reader_endpoint_address        = (known after apply)
      [32m+[0m[0m region                         = "us-east-1"
      [32m+[0m[0m replicas_per_node_group        = (known after apply)
      [32m+[0m[0m replication_group_id           = (known after apply)
      [32m+[0m[0m security_group_ids             = (known after apply)
      [32m+[0m[0m security_group_names           = (known after apply)
      [32m+[0m[0m snapshot_window                = (known after apply)
      [32m+[0m[0m subnet_group_name              = (known after apply)
      [32m+[0m[0m tags                           = (known after apply)
      [32m+[0m[0m tags_all                       = (known after apply)
      [32m+[0m[0m transit_encryption_enabled     = true
      [32m+[0m[0m transit_encryption_mode        = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_iam_role.ecs_execution[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_execution" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_iam_role.ecs_task[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_task" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_iam_role_policy.ecs_task_parameter_store[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "ecs_task_parameter_store" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ssm:GetParameter",
                          [32m+[0m[0m "ssm:GetParameters",
                          [32m+[0m[0m "ssm:GetParametersByPath",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = [
                          [32m+[0m[0m "arn:aws:ssm:ap-southeast-1:*:parameter/wordpress-geo/prod/*",
                        ]
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_iam_role_policy.ecs_task_s3[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "ecs_task_s3" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = (known after apply)
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_iam_role_policy_attachment.ecs_execution_role_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_execution_role_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_lb.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "wordpress" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enable_zonal_shift                                           = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = (known after apply)
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m region                                                       = "us-east-1"
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = (known after apply)
      [32m+[0m[0m tags_all                                                     = (known after apply)
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m subnet_mapping (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_lb_listener.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "wordpress" {
      [32m+[0m[0m arn                                                                   = (known after apply)
      [32m+[0m[0m id                                                                    = (known after apply)
      [32m+[0m[0m load_balancer_arn                                                     = (known after apply)
      [32m+[0m[0m port                                                                  = 80
      [32m+[0m[0m protocol                                                              = "HTTP"
      [32m+[0m[0m region                                                                = "us-east-1"
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_header_name               = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_issuer_header_name        = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_leaf_header_name          = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_subject_header_name       = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_validity_header_name      = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_cipher_suite_header_name              = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_version_header_name                   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_credentials_header_value   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_headers_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_methods_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_origin_header_value        = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_expose_headers_header_value      = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_max_age_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_content_security_policy_header_value            = (known after apply)
      [32m+[0m[0m routing_http_response_server_enabled                                  = (known after apply)
      [32m+[0m[0m routing_http_response_strict_transport_security_header_value          = (known after apply)
      [32m+[0m[0m routing_http_response_x_content_type_options_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_x_frame_options_header_value                    = (known after apply)
      [32m+[0m[0m ssl_policy                                                            = (known after apply)
      [32m+[0m[0m tags_all                                                              = {
          [32m+[0m[0m "Environment" = "prod"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "wordpress-geo"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds                                              = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }

      [32m+[0m[0m mutual_authentication (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_lb_target_group.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "wordpress" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m region                             = "us-east-1"
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "ip"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200,302"
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 10
          [32m+[0m[0m unhealthy_threshold = 5
        }

      [32m+[0m[0m stickiness (known after apply)

      [32m+[0m[0m target_failover (known after apply)

      [32m+[0m[0m target_group_health (known after apply)

      [32m+[0m[0m target_health_state (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_service_discovery_private_dns_namespace.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_service_discovery_private_dns_namespace" "wordpress" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m hosted_zone = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "wordpress-geo.local"
      [32m+[0m[0m region      = "us-east-1"
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m vpc         = (known after apply)
    }

[1m  # module.wordpress_fargate["singapore"].aws_service_discovery_service.wordpress[0m will be created
[0m  [32m+[0m[0m resource "aws_service_discovery_service" "wordpress" {
      [32m+[0m[0m arn           = (known after apply)
      [32m+[0m[0m force_destroy = false
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m name          = "wordpress-singapore"
      [32m+[0m[0m namespace_id  = (known after apply)
      [32m+[0m[0m region        = "us-east-1"
      [32m+[0m[0m tags          = (known after apply)
      [32m+[0m[0m tags_all      = (known after apply)
      [32m+[0m[0m type          = (known after apply)

      [32m+[0m[0m dns_config {
          [32m+[0m[0m namespace_id   = (known after apply)
          [32m+[0m[0m routing_policy = "MULTIVALUE"

          [32m+[0m[0m dns_records {
              [32m+[0m[0m ttl  = 10
              [32m+[0m[0m type = "A"
            }
        }
    }

[1mPlan:[0m 164 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aurora_global_cluster_id            = (known after apply)
  [32m+[0m[0m cloudfront_distribution_domain_name = (known after apply)
  [32m+[0m[0m cloudfront_distribution_id          = (known after apply)
  [32m+[0m[0m ecs_cluster_names                   = {
      [32m+[0m[0m ireland   = (known after apply)
      [32m+[0m[0m singapore = (known after apply)
    }
  [32m+[0m[0m random_suffix                       = (known after apply)
  [32m+[0m[0m regional_alb_endpoints              = {
      [32m+[0m[0m ireland   = (known after apply)
      [32m+[0m[0m singapore = (known after apply)
    }
  [32m+[0m[0m regional_vpc_ids                    = {
      [32m+[0m[0m ireland   = (known after apply)
      [32m+[0m[0m singapore = (known after apply)
    }
  [32m+[0m[0m s3_bucket_name                      = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: terraform-plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "terraform-plan.out"
=== TERRAFORM PLAN SUMMARY ===

Configuration: Cost-Optimized Global WordPress Infrastructure
Date: Tue, Aug 26, 2025  5:21:40 PM
Estimated Monthly Cost: ~65 for 2 regions

Key Features:
- Aurora Global Database (db.t4g.medium)
- ECS Fargate (0.25 vCPU, 512MB RAM)
- ElastiCache Redis (cache.t4g.nano)
- Python Lambda@Edge geo-routing
- S3 cross-region replication
- CloudFront with intelligent routing

Ready for deployment: terraform apply terraform-plan.out
